# 강의 제목 : RAG 아키텍처 이해

## Keyword
- RAG, 벡터, 임베딩, redis-stack

## 용어 정리
### 할루시네이션(환각) : 부정확한 정보를 산출하는 현상, 실제와 일치하지 않는 정보를 만들어내는 현상
### 벡터 : 크기와 방향을 가지는 물리량, 쉽게 말해서는 그냥 좌표!
### 임베딩 : 컴퓨터가 알아들을 수 있게 인간의 문자열을 실수형태인 벡터로 표현한 결과

---

## LLM의 할루시네이션 현상과 그 해결책, RAG

### 할루시네이션 발생 이유
- 학습한 데이터를 바탕으로 "확률을 기반"으로 단어를 예측하기 때문이다

### 검색증강생성(Retrieval-Augmented Generation)
- 답변의 지식 출처를 제공하여 해당 출처를 검색한 내용을 기반으로 답변 제공
  - 넓은 의미의 Context Providing

---

## RAG 원리 이해하기 - 임베딩과 벡터DB

### 인간의 인지 과정
1. 고객의 요청 이해하기 ex) 환불
2. 고객 응대 메뉴얼 참고 - 상대방의 질문과 연관된 페이지 찾기
  -> 여기가 핵심!
3. 연관된 페이지 정보를 바탕으로 고객에게 답변

### RAG 진행 과정
1. 사용자의 질문 입력받기
2. 질문을 임베딩 과정을 통해 벡터로 변환
3. 변환된 벡터를 기반으로 벡터 DB에서 유사도를 바탕으로 단어들을 "검색"
  -> 핵심은 검색!
4. 검색된 정보들을 Context로 하여 LLM에 입력
5. 최종 답변 추출

---

## 핵심 - 데이터는 벡터로 저장된다

### 검색증강생성을 위해 필요한 사항들
1. 검색 출처 파일(txt, PDF 등)
2. 검색 텍스트 벡터 임베딩
3. 유저의 질문 벡터 임베딩
4. 벡터DB에서 유사도 검색